# Workflow to build and deploy a Next.js site to GitHub Pages
#
# Documentation for Next.js: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js to GitHub Pages

on:
  # Trigger workflow on pushes to the "final-prod" branch
  push:
    branches: ["final-prod"]

  # Allow manual triggering from the Actions tab
  workflow_dispatch:

permissions:
  # Set permissions for the GITHUB_TOKEN
  contents: read
  pages: write
  id-token: write

concurrency:
  # Allow only one deployment group at a time
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    # Build job to prepare the site for deployment
    runs-on: ubuntu-22.04 # Explicitly using Ubuntu 22.04 for compatibility
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Configure Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: Restore build cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build the site
        run: ${{ steps.detect-package-manager.outputs.runner }} next build

      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    # Deploy job to publish the site to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04 # Explicitly using Ubuntu 22.04 for compatibility
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
